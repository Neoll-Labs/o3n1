syntax = "proto3";

package storepositionether.storepositionether;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "storepositionether/storepositionether/params.proto";
import "storepositionether/storepositionether/eth_address.proto";

option go_package = "storepositionether/x/storepositionether/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/storepositionether/storepositionether/params";
  
  }
  
  // Queries a list of EthAddress items.
  rpc EthAddress    (QueryGetEthAddressRequest) returns (QueryGetEthAddressResponse) {
    option (google.api.http).get = "/storepositionether/storepositionether/eth_address/{index}";
  
  }
  rpc EthAddressAll (QueryAllEthAddressRequest) returns (QueryAllEthAddressResponse) {
    option (google.api.http).get = "/storepositionether/storepositionether/eth_address";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetEthAddressRequest {
  string index = 1;
}

message QueryGetEthAddressResponse {
  EthAddress ethAddress = 1 [(gogoproto.nullable) = false];
}

message QueryAllEthAddressRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEthAddressResponse {
  repeated EthAddress                             ethAddress = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

