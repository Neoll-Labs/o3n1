syntax = "proto3";

package statether.statether;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "statether/statether/params.proto";
import "statether/statether/statether.proto";

option go_package = "github.com/nelsonstr/o3n1/statether/x/statether/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/o3n1/statether/statether/params";
  
  }
  
  // Queries a list of Statether items.
  rpc Statether    (QueryGetStatetherRequest) returns (QueryGetStatetherResponse) {
    option (google.api.http).get = "/o3n1/statether/statether/statether/{index}";
  
  }
  rpc StatetherAll (QueryAllStatetherRequest) returns (QueryAllStatetherResponse) {
    option (google.api.http).get = "/o3n1/statether/statether/statether";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetStatetherRequest {
  string index = 1;
}

message QueryGetStatetherResponse {
  Statether statether = 1 [(gogoproto.nullable) = false];
}

message QueryAllStatetherRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStatetherResponse {
  repeated Statether                              statether  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

